[{"/Users/danbibibi/Desktop/WEB/frontend/src/index.js":"1","/Users/danbibibi/Desktop/WEB/frontend/src/store.js":"2","/Users/danbibibi/Desktop/WEB/frontend/src/reportWebVitals.js":"3","/Users/danbibibi/Desktop/WEB/frontend/src/App.js":"4","/Users/danbibibi/Desktop/WEB/frontend/src/reducers/productReducers.js":"5","/Users/danbibibi/Desktop/WEB/frontend/src/reducers/cartReducers.js":"6","/Users/danbibibi/Desktop/WEB/frontend/src/reducers/orderReducers.js":"7","/Users/danbibibi/Desktop/WEB/frontend/src/reducers/userReducers.js":"8","/Users/danbibibi/Desktop/WEB/frontend/src/screens/LoginScreen.js":"9","/Users/danbibibi/Desktop/WEB/frontend/src/screens/ProductScreen.js":"10","/Users/danbibibi/Desktop/WEB/frontend/src/screens/ProfileScreen.js":"11","/Users/danbibibi/Desktop/WEB/frontend/src/components/Header.js":"12","/Users/danbibibi/Desktop/WEB/frontend/src/screens/RegisterScreen.js":"13","/Users/danbibibi/Desktop/WEB/frontend/src/screens/ShippingScreen.js":"14","/Users/danbibibi/Desktop/WEB/frontend/src/screens/PlaceOrderScreen.js":"15","/Users/danbibibi/Desktop/WEB/frontend/src/screens/UserListScreen.js":"16","/Users/danbibibi/Desktop/WEB/frontend/src/screens/UserEditScreen.js":"17","/Users/danbibibi/Desktop/WEB/frontend/src/screens/PaymentScreen.js":"18","/Users/danbibibi/Desktop/WEB/frontend/src/screens/ProductEditScreen.js":"19","/Users/danbibibi/Desktop/WEB/frontend/src/screens/OrderScreen.js":"20","/Users/danbibibi/Desktop/WEB/frontend/src/screens/HomeScreen.js":"21","/Users/danbibibi/Desktop/WEB/frontend/src/screens/OrderListScreen.js":"22","/Users/danbibibi/Desktop/WEB/frontend/src/screens/ProductListScreen.js":"23","/Users/danbibibi/Desktop/WEB/frontend/src/screens/CartScreen.js":"24","/Users/danbibibi/Desktop/WEB/frontend/src/components/Footer.js":"25","/Users/danbibibi/Desktop/WEB/frontend/src/screens/style.js":"26","/Users/danbibibi/Desktop/WEB/frontend/src/components/Loader.js":"27","/Users/danbibibi/Desktop/WEB/frontend/src/components/Message.js":"28","/Users/danbibibi/Desktop/WEB/frontend/src/components/FormContainer.js":"29","/Users/danbibibi/Desktop/WEB/frontend/src/components/Rating.js":"30","/Users/danbibibi/Desktop/WEB/frontend/src/components/SearchBox.js":"31","/Users/danbibibi/Desktop/WEB/frontend/src/components/Paginate.js":"32","/Users/danbibibi/Desktop/WEB/frontend/src/components/ProductCarousel.js":"33","/Users/danbibibi/Desktop/WEB/frontend/src/components/Product.js":"34","/Users/danbibibi/Desktop/WEB/frontend/src/constants/orderConstants.js":"35","/Users/danbibibi/Desktop/WEB/frontend/src/constants/cartConstants.js":"36","/Users/danbibibi/Desktop/WEB/frontend/src/constants/userConstants.js":"37","/Users/danbibibi/Desktop/WEB/frontend/src/constants/productConstants.js":"38","/Users/danbibibi/Desktop/WEB/frontend/src/actions/cartActions.js":"39","/Users/danbibibi/Desktop/WEB/frontend/src/actions/productActions.js":"40","/Users/danbibibi/Desktop/WEB/frontend/src/actions/userActions.js":"41","/Users/danbibibi/Desktop/WEB/frontend/src/actions/orderActions.js":"42","/Users/danbibibi/Desktop/WEB/frontend/src/components/CheckoutSteps.js":"43","/Users/danbibibi/Desktop/WEB/frontend/src/screens/BlackListScreen.js":"44","/Users/danbibibi/Desktop/WEB/frontend/src/actions/blackActions.js":"45","/Users/danbibibi/Desktop/WEB/frontend/src/constants/blackConstants.js":"46","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/index.js":"47","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/store.js":"48","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/reportWebVitals.js":"49","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/App.js":"50","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/reducers/productReducers.js":"51","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/reducers/cartReducers.js":"52","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/reducers/userReducers.js":"53","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/reducers/orderReducers.js":"54","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/HomeScreen.js":"55","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/ProductScreen.js":"56","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/PaymentScreen.js":"57","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Header.js":"58","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/ShippingScreen.js":"59","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/ProfileScreen.js":"60","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/RegisterScreen.js":"61","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/UserListScreen.js":"62","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/UserEditScreen.js":"63","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/LoginScreen.js":"64","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/PlaceOrderScreen.js":"65","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Footer.js":"66","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/OrderScreen.js":"67","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/CartScreen.js":"68","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/ProductListScreen.js":"69","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/ProductEditScreen.js":"70","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/OrderListScreen.js":"71","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/BlackListScreen.js":"72","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/style.js":"73","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Product.js":"74","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Loader.js":"75","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Message.js":"76","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/ProductCarousel.js":"77","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Paginate.js":"78","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/FormContainer.js":"79","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Rating.js":"80","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/CheckoutSteps.js":"81","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/SearchBox.js":"82","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/constants/productConstants.js":"83","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/constants/orderConstants.js":"84","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/constants/userConstants.js":"85","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/constants/cartConstants.js":"86","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/actions/productActions.js":"87","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/actions/cartActions.js":"88","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/actions/orderActions.js":"89","/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/actions/userActions.js":"90"},{"size":594,"mtime":1661967572107,"results":"91","hashOfConfig":"92"},{"size":2417,"mtime":1661967572112,"results":"93","hashOfConfig":"92"},{"size":362,"mtime":1661967572109,"results":"94","hashOfConfig":"92"},{"size":2329,"mtime":1661972184832,"results":"95","hashOfConfig":"92"},{"size":4080,"mtime":1661967572108,"results":"96","hashOfConfig":"92"},{"size":1486,"mtime":1661967572108,"results":"97","hashOfConfig":"92"},{"size":4079,"mtime":1661967572108,"results":"98","hashOfConfig":"92"},{"size":3926,"mtime":1661967572108,"results":"99","hashOfConfig":"92"},{"size":2549,"mtime":1661967572110,"results":"100","hashOfConfig":"92"},{"size":15070,"mtime":1662056451750,"results":"101","hashOfConfig":"92"},{"size":6774,"mtime":1661967572111,"results":"102","hashOfConfig":"92"},{"size":3298,"mtime":1662054299515,"results":"103","hashOfConfig":"92"},{"size":3922,"mtime":1661967572111,"results":"104","hashOfConfig":"92"},{"size":3176,"mtime":1661967572111,"results":"105","hashOfConfig":"92"},{"size":6564,"mtime":1661967572111,"results":"106","hashOfConfig":"92"},{"size":3511,"mtime":1661967572112,"results":"107","hashOfConfig":"92"},{"size":3912,"mtime":1661967572112,"results":"108","hashOfConfig":"92"},{"size":1705,"mtime":1661967572110,"results":"109","hashOfConfig":"92"},{"size":7916,"mtime":1661967572111,"results":"110","hashOfConfig":"92"},{"size":9806,"mtime":1661967572110,"results":"111","hashOfConfig":"92"},{"size":1795,"mtime":1661989105035,"results":"112","hashOfConfig":"92"},{"size":3541,"mtime":1661967572110,"results":"113","hashOfConfig":"92"},{"size":5007,"mtime":1661967572111,"results":"114","hashOfConfig":"92"},{"size":4733,"mtime":1662045006188,"results":"115","hashOfConfig":"92"},{"size":360,"mtime":1661967572104,"results":"116","hashOfConfig":"92"},{"size":134,"mtime":1661967572112,"results":"117","hashOfConfig":"92"},{"size":458,"mtime":1661967572105,"results":"118","hashOfConfig":"92"},{"size":228,"mtime":1661967572105,"results":"119","hashOfConfig":"92"},{"size":378,"mtime":1661967572104,"results":"120","hashOfConfig":"92"},{"size":1886,"mtime":1661967572105,"results":"121","hashOfConfig":"92"},{"size":982,"mtime":1661970111987,"results":"122","hashOfConfig":"92"},{"size":859,"mtime":1661988890859,"results":"123","hashOfConfig":"92"},{"size":1421,"mtime":1662010668938,"results":"124","hashOfConfig":"92"},{"size":1008,"mtime":1661967572105,"results":"125","hashOfConfig":"92"},{"size":1240,"mtime":1661967572107,"results":"126","hashOfConfig":"92"},{"size":287,"mtime":1661967572106,"results":"127","hashOfConfig":"92"},{"size":1479,"mtime":1661967572107,"results":"128","hashOfConfig":"92"},{"size":1502,"mtime":1661967572107,"results":"129","hashOfConfig":"92"},{"size":1310,"mtime":1661967572103,"results":"130","hashOfConfig":"92"},{"size":5931,"mtime":1661967572103,"results":"131","hashOfConfig":"92"},{"size":7370,"mtime":1661967572103,"results":"132","hashOfConfig":"92"},{"size":6009,"mtime":1661967572103,"results":"133","hashOfConfig":"92"},{"size":1593,"mtime":1661967572104,"results":"134","hashOfConfig":"92"},{"size":3391,"mtime":1662068716339,"results":"135","hashOfConfig":"92"},{"size":1561,"mtime":1662009189060,"results":"136","hashOfConfig":"92"},{"size":1530,"mtime":1662005238041,"results":"137","hashOfConfig":"92"},{"size":594,"mtime":1661967572107,"results":"138","hashOfConfig":"139"},{"size":2417,"mtime":1661967572112,"results":"140","hashOfConfig":"139"},{"size":362,"mtime":1661967572109,"results":"141","hashOfConfig":"139"},{"size":2329,"mtime":1661972184832,"results":"142","hashOfConfig":"139"},{"size":4080,"mtime":1661967572108,"results":"143","hashOfConfig":"139"},{"size":1486,"mtime":1661967572108,"results":"144","hashOfConfig":"139"},{"size":3926,"mtime":1661967572108,"results":"145","hashOfConfig":"139"},{"size":4079,"mtime":1661967572108,"results":"146","hashOfConfig":"139"},{"size":1795,"mtime":1661989105035,"results":"147","hashOfConfig":"139"},{"size":15070,"mtime":1662056451750,"results":"148","hashOfConfig":"139"},{"size":1705,"mtime":1661967572110,"results":"149","hashOfConfig":"139"},{"size":3298,"mtime":1662054299515,"results":"150","hashOfConfig":"139"},{"size":3176,"mtime":1661967572111,"results":"151","hashOfConfig":"139"},{"size":6774,"mtime":1661967572111,"results":"152","hashOfConfig":"139"},{"size":3922,"mtime":1661967572111,"results":"153","hashOfConfig":"139"},{"size":3511,"mtime":1661967572112,"results":"154","hashOfConfig":"139"},{"size":3912,"mtime":1661967572112,"results":"155","hashOfConfig":"139"},{"size":2549,"mtime":1661967572110,"results":"156","hashOfConfig":"139"},{"size":6564,"mtime":1661967572111,"results":"157","hashOfConfig":"139"},{"size":360,"mtime":1661967572104,"results":"158","hashOfConfig":"139"},{"size":9806,"mtime":1661967572110,"results":"159","hashOfConfig":"139"},{"size":4733,"mtime":1662045006188,"results":"160","hashOfConfig":"139"},{"size":5007,"mtime":1661967572111,"results":"161","hashOfConfig":"139"},{"size":7916,"mtime":1661967572111,"results":"162","hashOfConfig":"139"},{"size":3541,"mtime":1661967572110,"results":"163","hashOfConfig":"139"},{"size":3391,"mtime":1662068716339,"results":"164","hashOfConfig":"139"},{"size":134,"mtime":1661967572112,"results":"165","hashOfConfig":"139"},{"size":1008,"mtime":1661967572105,"results":"166","hashOfConfig":"139"},{"size":458,"mtime":1661967572105,"results":"167","hashOfConfig":"139"},{"size":228,"mtime":1661967572105,"results":"168","hashOfConfig":"139"},{"size":1421,"mtime":1662010668938,"results":"169","hashOfConfig":"139"},{"size":859,"mtime":1661988890859,"results":"170","hashOfConfig":"139"},{"size":378,"mtime":1661967572104,"results":"171","hashOfConfig":"139"},{"size":1886,"mtime":1661967572105,"results":"172","hashOfConfig":"139"},{"size":1593,"mtime":1661967572104,"results":"173","hashOfConfig":"139"},{"size":982,"mtime":1661970111987,"results":"174","hashOfConfig":"139"},{"size":1502,"mtime":1661967572107,"results":"175","hashOfConfig":"139"},{"size":1240,"mtime":1661967572107,"results":"176","hashOfConfig":"139"},{"size":1479,"mtime":1661967572107,"results":"177","hashOfConfig":"139"},{"size":287,"mtime":1661967572106,"results":"178","hashOfConfig":"139"},{"size":5931,"mtime":1661967572103,"results":"179","hashOfConfig":"139"},{"size":1310,"mtime":1661967572103,"results":"180","hashOfConfig":"139"},{"size":6009,"mtime":1661967572103,"results":"181","hashOfConfig":"139"},{"size":7370,"mtime":1661967572103,"results":"182","hashOfConfig":"139"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},"1snpk2q",{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"185"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"185"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"185"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"185"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"185"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"185"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"185"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"185"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"185"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"185"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"185"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"185"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"185"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"185"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"185"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"185"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"185"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kvwwh",{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danbibibi/Desktop/WEB/frontend/src/index.js",[],["381","382"],"/Users/danbibibi/Desktop/WEB/frontend/src/store.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/reportWebVitals.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/App.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/reducers/productReducers.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/reducers/cartReducers.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/reducers/orderReducers.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/reducers/userReducers.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/screens/LoginScreen.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/screens/ProductScreen.js",["383","384","385","386","387","388","389","390","391","392","393"],"/Users/danbibibi/Desktop/WEB/frontend/src/screens/ProfileScreen.js",["394","395"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","/Users/danbibibi/Desktop/WEB/frontend/src/components/Header.js",["396"],"/Users/danbibibi/Desktop/WEB/frontend/src/screens/RegisterScreen.js",["397"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","/Users/danbibibi/Desktop/WEB/frontend/src/screens/ShippingScreen.js",["398"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","/Users/danbibibi/Desktop/WEB/frontend/src/screens/PlaceOrderScreen.js",["399","400"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","/Users/danbibibi/Desktop/WEB/frontend/src/screens/UserListScreen.js",["401"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","/Users/danbibibi/Desktop/WEB/frontend/src/screens/UserEditScreen.js",["402"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/Users/danbibibi/Desktop/WEB/frontend/src/screens/PaymentScreen.js",["403"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","/Users/danbibibi/Desktop/WEB/frontend/src/screens/ProductEditScreen.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/screens/OrderScreen.js",["404"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","/Users/danbibibi/Desktop/WEB/frontend/src/screens/HomeScreen.js",["405","406","407","408","409","410"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\nimport Tooltip from 'react-bootstrap'\nimport {arrow_box, tippy} from './message.css'\nimport style from './style.js'\n\n// import \"../css/HomeScreen\"\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n    let keyword = history.location.search\n    const [hover, setHover] = useState(false);\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && <ProductCarousel />}\n\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => {\n                                return (\n                                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}> \n                                        <Product product={product} />\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","/Users/danbibibi/Desktop/WEB/frontend/src/screens/OrderListScreen.js",["411"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","/Users/danbibibi/Desktop/WEB/frontend/src/screens/ProductListScreen.js",["412"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","/Users/danbibibi/Desktop/WEB/frontend/src/screens/CartScreen.js",["413"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='danger'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            ${item.price}\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                            </Form.Control>\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button\n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                        </Button>\n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","/Users/danbibibi/Desktop/WEB/frontend/src/components/Footer.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/screens/style.js",["414"],"export default {\n    normal:{\n      background: 'purple',\n      color: '#ffffff'\n    },\n    hover: {\n      background: 'red'\n    }\n  }","/Users/danbibibi/Desktop/WEB/frontend/src/components/Loader.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/components/Message.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/components/FormContainer.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/components/Rating.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/components/SearchBox.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/components/Paginate.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/components/ProductCarousel.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/components/Product.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/constants/orderConstants.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/constants/cartConstants.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/constants/userConstants.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/constants/productConstants.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/actions/cartActions.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/actions/productActions.js",["415"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/Users/danbibibi/Desktop/WEB/frontend/src/actions/userActions.js",["416"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/Users/danbibibi/Desktop/WEB/frontend/src/actions/orderActions.js",["417","418","419"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/Users/danbibibi/Desktop/WEB/frontend/src/components/CheckoutSteps.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/screens/BlackListScreen.js",[],"/Users/danbibibi/Desktop/WEB/frontend/src/actions/blackActions.js",["420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441"],"import axios from 'axios'\nimport {\n    BLACK_LOGIN_REQUEST,\n    BLACK_LOGIN_SUCCESS,\n    BLACK_LOGIN_FAIL,\n\n    BLACK_LOGOUT,\n\n    BLACK_REGISTER_REQUEST,\n    BLACK_REGISTER_SUCCESS,\n    BLACK_REGISTER_FAIL,\n\n    BLACK_DETAILS_REQUEST,\n    BLACK_DETAILS_SUCCESS,\n    BLACK_DETAILS_FAIL,\n    BLACK_DETAILS_RESET,\n\n    BLACK_UPDATE_PROFILE_REQUEST,\n    BLACK_UPDATE_PROFILE_SUCCESS,\n    BLACK_UPDATE_PROFILE_FAIL,\n    BLACK_UPDATE_PROFILE_RESET,\n\n    BLACK_LIST_REQUEST,\n    BLACK_LIST_SUCCESS,\n    BLACK_LIST_FAIL,\n    BLACK_LIST_RESET,\n\n    BLACK_DELETE_REQUEST,\n    BLACK_DELETE_SUCCESS,\n    BLACK_DELETE_FAIL,\n\n    BLACK_UPDATE_REQUEST,\n    BLACK_UPDATE_SUCCESS,\n    BLACK_UPDATE_FAIL,\n\n} from '../constants/blackConstants'\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BLACK_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/black/`,\n            config\n        )\n\n        dispatch({\n            type: BLACK_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: BLACK_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/Users/danbibibi/Desktop/WEB/frontend/src/constants/blackConstants.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/index.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/store.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/reportWebVitals.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/App.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/reducers/productReducers.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/reducers/cartReducers.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/reducers/userReducers.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/reducers/orderReducers.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/HomeScreen.js",["442","443","444","445","446","447"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/ProductScreen.js",["448","449","450","451","452","453","454","455","456","457","458"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/PaymentScreen.js",["459"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Header.js",["460"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/ShippingScreen.js",["461"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/ProfileScreen.js",["462","463"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/RegisterScreen.js",["464"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/UserListScreen.js",["465"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/UserEditScreen.js",["466"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/LoginScreen.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/PlaceOrderScreen.js",["467","468"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Footer.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/OrderScreen.js",["469"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/CartScreen.js",["470"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/ProductListScreen.js",["471"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/ProductEditScreen.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/OrderListScreen.js",["472"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/BlackListScreen.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/screens/style.js",["473"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Product.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Loader.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Message.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/ProductCarousel.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Paginate.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/FormContainer.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/Rating.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/CheckoutSteps.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/components/SearchBox.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/constants/productConstants.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/constants/orderConstants.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/constants/userConstants.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/constants/cartConstants.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/actions/productActions.js",["474"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/actions/cartActions.js",[],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/actions/orderActions.js",["475","476","477"],"/Users/danbibibi/Desktop/WEB 2/backend/frontend/src/actions/userActions.js",["478"],{"ruleId":"479","replacedBy":"480"},{"ruleId":"481","replacedBy":"482"},{"ruleId":"483","severity":1,"message":"484","line":10,"column":8,"nodeType":"485","messageId":"486","endLine":10,"endColumn":22},{"ruleId":"483","severity":1,"message":"487","line":13,"column":8,"nodeType":"485","messageId":"486","endLine":13,"endColumn":14},{"ruleId":"483","severity":1,"message":"488","line":23,"column":12,"nodeType":"485","messageId":"486","endLine":23,"endColumn":22},{"ruleId":"483","severity":1,"message":"489","line":42,"column":11,"nodeType":"485","messageId":"486","endLine":42,"endColumn":18},{"ruleId":"483","severity":1,"message":"490","line":46,"column":11,"nodeType":"485","messageId":"486","endLine":46,"endColumn":15},{"ruleId":"483","severity":1,"message":"491","line":48,"column":11,"nodeType":"485","messageId":"486","endLine":48,"endColumn":20},{"ruleId":"483","severity":1,"message":"492","line":54,"column":11,"nodeType":"485","messageId":"486","endLine":54,"endColumn":16},{"ruleId":"493","severity":1,"message":"494","line":74,"column":9,"nodeType":"495","messageId":"496","endLine":76,"endColumn":12},{"ruleId":"497","severity":1,"message":"498","line":180,"column":84,"nodeType":"499","messageId":"500","endLine":180,"endColumn":86},{"ruleId":"497","severity":1,"message":"498","line":261,"column":74,"nodeType":"499","messageId":"500","endLine":261,"endColumn":76},{"ruleId":"497","severity":1,"message":"498","line":280,"column":59,"nodeType":"499","messageId":"500","endLine":280,"endColumn":61},{"ruleId":"483","severity":1,"message":"501","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"502","line":53,"column":22,"nodeType":"499","messageId":"500","endLine":53,"endColumn":24},{"ruleId":"483","severity":1,"message":"503","line":3,"column":34,"nodeType":"485","messageId":"486","endLine":3,"endColumn":37},{"ruleId":"497","severity":1,"message":"502","line":34,"column":22,"nodeType":"499","messageId":"500","endLine":34,"endColumn":24},{"ruleId":"483","severity":1,"message":"504","line":1,"column":27,"nodeType":"485","messageId":"486","endLine":1,"endColumn":36},{"ruleId":"483","severity":1,"message":"505","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"506","severity":1,"message":"507","line":35,"column":8,"nodeType":"508","endLine":35,"endColumn":26,"suggestions":"509"},{"ruleId":"483","severity":1,"message":"505","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"506","severity":1,"message":"510","line":43,"column":8,"nodeType":"508","endLine":43,"endColumn":46,"suggestions":"511"},{"ruleId":"483","severity":1,"message":"504","line":1,"column":27,"nodeType":"485","messageId":"486","endLine":1,"endColumn":36},{"ruleId":"506","severity":1,"message":"512","line":65,"column":8,"nodeType":"508","endLine":65,"endColumn":62,"suggestions":"513"},{"ruleId":"483","severity":1,"message":"514","line":10,"column":8,"nodeType":"485","messageId":"486","endLine":10,"endColumn":15},{"ruleId":"483","severity":1,"message":"515","line":11,"column":9,"nodeType":"485","messageId":"486","endLine":11,"endColumn":18},{"ruleId":"483","severity":1,"message":"516","line":11,"column":20,"nodeType":"485","messageId":"486","endLine":11,"endColumn":25},{"ruleId":"483","severity":1,"message":"517","line":12,"column":8,"nodeType":"485","messageId":"486","endLine":12,"endColumn":13},{"ruleId":"483","severity":1,"message":"518","line":21,"column":12,"nodeType":"485","messageId":"486","endLine":21,"endColumn":17},{"ruleId":"483","severity":1,"message":"519","line":21,"column":19,"nodeType":"485","messageId":"486","endLine":21,"endColumn":27},{"ruleId":"483","severity":1,"message":"505","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"483","severity":1,"message":"505","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"483","severity":1,"message":"505","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"520","severity":1,"message":"521","line":1,"column":1,"nodeType":"522","endLine":9,"endColumn":4},{"ruleId":"483","severity":1,"message":"523","line":117,"column":17,"nodeType":"485","messageId":"486","endLine":117,"endColumn":21},{"ruleId":"483","severity":1,"message":"524","line":21,"column":5,"nodeType":"485","messageId":"486","endLine":21,"endColumn":30},{"ruleId":"483","severity":1,"message":"525","line":14,"column":5,"nodeType":"485","messageId":"486","endLine":14,"endColumn":20},{"ruleId":"483","severity":1,"message":"526","line":19,"column":5,"nodeType":"485","messageId":"486","endLine":19,"endColumn":24},{"ruleId":"483","severity":1,"message":"527","line":28,"column":5,"nodeType":"485","messageId":"486","endLine":28,"endColumn":24},{"ruleId":"483","severity":1,"message":"528","line":3,"column":5,"nodeType":"485","messageId":"486","endLine":3,"endColumn":24},{"ruleId":"483","severity":1,"message":"529","line":4,"column":5,"nodeType":"485","messageId":"486","endLine":4,"endColumn":24},{"ruleId":"483","severity":1,"message":"530","line":5,"column":5,"nodeType":"485","messageId":"486","endLine":5,"endColumn":21},{"ruleId":"483","severity":1,"message":"531","line":7,"column":5,"nodeType":"485","messageId":"486","endLine":7,"endColumn":17},{"ruleId":"483","severity":1,"message":"532","line":9,"column":5,"nodeType":"485","messageId":"486","endLine":9,"endColumn":27},{"ruleId":"483","severity":1,"message":"533","line":10,"column":5,"nodeType":"485","messageId":"486","endLine":10,"endColumn":27},{"ruleId":"483","severity":1,"message":"534","line":11,"column":5,"nodeType":"485","messageId":"486","endLine":11,"endColumn":24},{"ruleId":"483","severity":1,"message":"535","line":13,"column":5,"nodeType":"485","messageId":"486","endLine":13,"endColumn":26},{"ruleId":"483","severity":1,"message":"536","line":14,"column":5,"nodeType":"485","messageId":"486","endLine":14,"endColumn":26},{"ruleId":"483","severity":1,"message":"537","line":15,"column":5,"nodeType":"485","messageId":"486","endLine":15,"endColumn":23},{"ruleId":"483","severity":1,"message":"538","line":16,"column":5,"nodeType":"485","messageId":"486","endLine":16,"endColumn":24},{"ruleId":"483","severity":1,"message":"539","line":18,"column":5,"nodeType":"485","messageId":"486","endLine":18,"endColumn":33},{"ruleId":"483","severity":1,"message":"540","line":19,"column":5,"nodeType":"485","messageId":"486","endLine":19,"endColumn":33},{"ruleId":"483","severity":1,"message":"541","line":20,"column":5,"nodeType":"485","messageId":"486","endLine":20,"endColumn":30},{"ruleId":"483","severity":1,"message":"542","line":21,"column":5,"nodeType":"485","messageId":"486","endLine":21,"endColumn":31},{"ruleId":"483","severity":1,"message":"543","line":26,"column":5,"nodeType":"485","messageId":"486","endLine":26,"endColumn":21},{"ruleId":"483","severity":1,"message":"544","line":28,"column":5,"nodeType":"485","messageId":"486","endLine":28,"endColumn":25},{"ruleId":"483","severity":1,"message":"545","line":29,"column":5,"nodeType":"485","messageId":"486","endLine":29,"endColumn":25},{"ruleId":"483","severity":1,"message":"546","line":30,"column":5,"nodeType":"485","messageId":"486","endLine":30,"endColumn":22},{"ruleId":"483","severity":1,"message":"547","line":32,"column":5,"nodeType":"485","messageId":"486","endLine":32,"endColumn":25},{"ruleId":"483","severity":1,"message":"548","line":33,"column":5,"nodeType":"485","messageId":"486","endLine":33,"endColumn":25},{"ruleId":"483","severity":1,"message":"549","line":34,"column":5,"nodeType":"485","messageId":"486","endLine":34,"endColumn":22},{"ruleId":"483","severity":1,"message":"514","line":10,"column":8,"nodeType":"485","messageId":"486","endLine":10,"endColumn":15},{"ruleId":"483","severity":1,"message":"515","line":11,"column":9,"nodeType":"485","messageId":"486","endLine":11,"endColumn":18},{"ruleId":"483","severity":1,"message":"516","line":11,"column":20,"nodeType":"485","messageId":"486","endLine":11,"endColumn":25},{"ruleId":"483","severity":1,"message":"517","line":12,"column":8,"nodeType":"485","messageId":"486","endLine":12,"endColumn":13},{"ruleId":"483","severity":1,"message":"518","line":21,"column":12,"nodeType":"485","messageId":"486","endLine":21,"endColumn":17},{"ruleId":"483","severity":1,"message":"519","line":21,"column":19,"nodeType":"485","messageId":"486","endLine":21,"endColumn":27},{"ruleId":"483","severity":1,"message":"484","line":10,"column":8,"nodeType":"485","messageId":"486","endLine":10,"endColumn":22},{"ruleId":"483","severity":1,"message":"487","line":13,"column":8,"nodeType":"485","messageId":"486","endLine":13,"endColumn":14},{"ruleId":"483","severity":1,"message":"488","line":23,"column":12,"nodeType":"485","messageId":"486","endLine":23,"endColumn":22},{"ruleId":"483","severity":1,"message":"489","line":42,"column":11,"nodeType":"485","messageId":"486","endLine":42,"endColumn":18},{"ruleId":"483","severity":1,"message":"490","line":46,"column":11,"nodeType":"485","messageId":"486","endLine":46,"endColumn":15},{"ruleId":"483","severity":1,"message":"491","line":48,"column":11,"nodeType":"485","messageId":"486","endLine":48,"endColumn":20},{"ruleId":"483","severity":1,"message":"492","line":54,"column":11,"nodeType":"485","messageId":"486","endLine":54,"endColumn":16},{"ruleId":"493","severity":1,"message":"494","line":74,"column":9,"nodeType":"495","messageId":"496","endLine":76,"endColumn":12},{"ruleId":"497","severity":1,"message":"498","line":180,"column":84,"nodeType":"499","messageId":"500","endLine":180,"endColumn":86},{"ruleId":"497","severity":1,"message":"498","line":261,"column":74,"nodeType":"499","messageId":"500","endLine":261,"endColumn":76},{"ruleId":"497","severity":1,"message":"498","line":280,"column":59,"nodeType":"499","messageId":"500","endLine":280,"endColumn":61},{"ruleId":"483","severity":1,"message":"504","line":1,"column":27,"nodeType":"485","messageId":"486","endLine":1,"endColumn":36},{"ruleId":"483","severity":1,"message":"503","line":3,"column":34,"nodeType":"485","messageId":"486","endLine":3,"endColumn":37},{"ruleId":"483","severity":1,"message":"504","line":1,"column":27,"nodeType":"485","messageId":"486","endLine":1,"endColumn":36},{"ruleId":"483","severity":1,"message":"501","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"502","line":53,"column":22,"nodeType":"499","messageId":"500","endLine":53,"endColumn":24},{"ruleId":"497","severity":1,"message":"502","line":34,"column":22,"nodeType":"499","messageId":"500","endLine":34,"endColumn":24},{"ruleId":"483","severity":1,"message":"505","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"506","severity":1,"message":"510","line":43,"column":8,"nodeType":"508","endLine":43,"endColumn":46,"suggestions":"550"},{"ruleId":"483","severity":1,"message":"505","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"506","severity":1,"message":"507","line":35,"column":8,"nodeType":"508","endLine":35,"endColumn":26,"suggestions":"551"},{"ruleId":"506","severity":1,"message":"512","line":65,"column":8,"nodeType":"508","endLine":65,"endColumn":62,"suggestions":"552"},{"ruleId":"483","severity":1,"message":"505","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"483","severity":1,"message":"505","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"483","severity":1,"message":"505","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"520","severity":1,"message":"521","line":1,"column":1,"nodeType":"522","endLine":9,"endColumn":4},{"ruleId":"483","severity":1,"message":"523","line":117,"column":17,"nodeType":"485","messageId":"486","endLine":117,"endColumn":21},{"ruleId":"483","severity":1,"message":"525","line":14,"column":5,"nodeType":"485","messageId":"486","endLine":14,"endColumn":20},{"ruleId":"483","severity":1,"message":"526","line":19,"column":5,"nodeType":"485","messageId":"486","endLine":19,"endColumn":24},{"ruleId":"483","severity":1,"message":"527","line":28,"column":5,"nodeType":"485","messageId":"486","endLine":28,"endColumn":24},{"ruleId":"483","severity":1,"message":"524","line":21,"column":5,"nodeType":"485","messageId":"486","endLine":21,"endColumn":30},"no-native-reassign",["553"],"no-negated-in-lhs",["554"],"no-unused-vars","'ReactWordcloud' is defined but never used.","Identifier","unusedVar","'Picker' is defined but never used.","'showreview' is assigned a value but never used.","'options' is assigned a value but never used.","'size' is assigned a value but never used.","'callbacks' is assigned a value but never used.","'lists' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","Expected '!==' and instead saw '!='.","'Row' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["555"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["556"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["557"],"'Tooltip' is defined but never used.","'arrow_box' is defined but never used.","'tippy' is defined but never used.","'style' is defined but never used.","'hover' is assigned a value but never used.","'setHover' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'BLACK_LOGIN_REQUEST' is defined but never used.","'BLACK_LOGIN_SUCCESS' is defined but never used.","'BLACK_LOGIN_FAIL' is defined but never used.","'BLACK_LOGOUT' is defined but never used.","'BLACK_REGISTER_REQUEST' is defined but never used.","'BLACK_REGISTER_SUCCESS' is defined but never used.","'BLACK_REGISTER_FAIL' is defined but never used.","'BLACK_DETAILS_REQUEST' is defined but never used.","'BLACK_DETAILS_SUCCESS' is defined but never used.","'BLACK_DETAILS_FAIL' is defined but never used.","'BLACK_DETAILS_RESET' is defined but never used.","'BLACK_UPDATE_PROFILE_REQUEST' is defined but never used.","'BLACK_UPDATE_PROFILE_SUCCESS' is defined but never used.","'BLACK_UPDATE_PROFILE_FAIL' is defined but never used.","'BLACK_UPDATE_PROFILE_RESET' is defined but never used.","'BLACK_LIST_RESET' is defined but never used.","'BLACK_DELETE_REQUEST' is defined but never used.","'BLACK_DELETE_SUCCESS' is defined but never used.","'BLACK_DELETE_FAIL' is defined but never used.","'BLACK_UPDATE_REQUEST' is defined but never used.","'BLACK_UPDATE_SUCCESS' is defined but never used.","'BLACK_UPDATE_FAIL' is defined but never used.",["558"],["559"],["560"],"no-global-assign","no-unsafe-negation",{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},{"desc":"563","fix":"567"},{"desc":"561","fix":"568"},{"desc":"565","fix":"569"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"570","text":"571"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"572","text":"573"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"574","text":"575"},{"range":"576","text":"573"},{"range":"577","text":"571"},{"range":"578","text":"575"},[1268,1286],"[success, history, order._id, dispatch]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[2175,2229],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1432,1470],[1268,1286],[2175,2229]]